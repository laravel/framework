name: databases

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:

jobs:
  mysql_57:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true

    name: MySQL 5.7

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: mysql
          DB_COLLATION: utf8mb4_unicode_ci

  mysql_8:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true

    name: MySQL 8

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: mysql

  mariadb:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    services:
      mariadb:
        image: mariadb:10
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
          MARIADB_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true

    name: MariaDB 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_mysql, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: mariadb

  pgsql_14:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    services:
      postgresql:
        image: postgres:14
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true

    name: PostgreSQL 14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: pgsql
          DB_USERNAME: forge
          DB_PASSWORD: password

  pgsql_10:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    services:
      postgresql:
        image: postgres:10
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: forge
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true

    name: PostgreSQL 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: pgsql
          DB_USERNAME: forge
          DB_PASSWORD: password

  mssql_2019:
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    services:
      sqlsrv:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Forge123
        ports:
          - 1433:1433

    strategy:
      fail-fast: true

    name: SQL Server 2019

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, sqlsrv, pdo, pdo_sqlsrv, odbc, pdo_odbc, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: sqlsrv
          DB_DATABASE: master
          DB_USERNAME: SA
          DB_PASSWORD: Forge123

  mssql_2017:
    runs-on: ubuntu-20.04
    timeout-minutes: 5

    services:
      sqlsrv:
        image: mcr.microsoft.com/mssql/server:2017-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: Forge123
        ports:
          - 1433:1433

    strategy:
      fail-fast: true

    name: SQL Server 2017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, sqlsrv, pdo, pdo_sqlsrv, odbc, pdo_odbc, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database
        env:
          DB_CONNECTION: sqlsrv
          DB_DATABASE: master
          DB_USERNAME: SA
          DB_PASSWORD: Forge123

  sqlite:
    runs-on: ubuntu-24.04
    timeout-minutes: 5

    strategy:
      fail-fast: true

    name: SQLite

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, sqlsrv, pdo, pdo_sqlsrv, odbc, pdo_odbc, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --prefer-stable --prefer-dist --no-interaction --no-progress

      - name: Setup SQLite Database
        run: php vendor/bin/testbench package:create-sqlite-db

      - name: Execute tests
        run: vendor/bin/phpunit tests/Integration/Database/Sqlite
        env:
          DB_CONNECTION: sqlite
