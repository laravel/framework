name: tests

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  linux_tests:
    runs-on: ubuntu-24.04

    services:
      memcached:
        image: memcached:1.6-alpine
        ports:
          - 11211:11211
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: forge
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server
      dynamodb:
        image: amazon/dynamodb-local:2.0.0
        ports:
          - 8888:8000

    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.3, 8.4]
        phpunit: ['10.5.12', '11.3.2']
        stability: [prefer-lowest, prefer-stable]

    name: PHP ${{ matrix.php }} - PHPUnit ${{ matrix.phpunit }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, redis, igbinary, msgpack, memcached, gmp, :php-psr
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: none
        env:
          REDIS_CONFIGURE_OPTS: --enable-redis --enable-redis-igbinary --enable-redis-msgpack --enable-redis-lzf --with-liblzf --enable-redis-zstd --with-libzstd --enable-redis-lz4 --with-liblz4
          REDIS_LIBS: liblz4-dev, liblzf-dev, libzstd-dev

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Set Minimum PHP 8.4 Versions
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer require  nesbot/carbon:^3.4 --no-interaction --no-update
          shell: bash
        if: matrix.php >= 8.4

      - name: Set PHPUnit
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer require phpunit/phpunit:^${{ matrix.phpunit }} --dev --no-interaction --no-update

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit --display-deprecation ${{ matrix.stability == 'prefer-stable' && '--fail-on-deprecation' || '' }}
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_USERNAME: root
          DYNAMODB_CACHE_TABLE: laravel_dynamodb_test
          DYNAMODB_ENDPOINT: "http://localhost:8888"
          AWS_ACCESS_KEY_ID: randomKey
          AWS_SECRET_ACCESS_KEY: randomSecret

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-logs-${{ matrix.php }}-${{ matrix.phpunit }}-${{ matrix.stability }}
          path: |
            vendor/orchestra/testbench-core/laravel/storage/logs
            !vendor/**/.gitignore

  windows_tests:
    runs-on: windows-2022

    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.3, 8.4]
        phpunit: ['10.5', '11.0.1']
        stability: [prefer-lowest, prefer-stable]
        exclude:
          - php: 8.4
            stability: prefer-lowest

    name: PHP ${{ matrix.php }} - PHPUnit ${{ matrix.phpunit }} - ${{ matrix.stability }} - Windows

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite, gd, pdo_mysql, fileinfo, ftp, redis, memcached, gmp, intl, :php-psr
          tools: composer:v2
          coverage: none

      - name: Set Framework version
        run: composer config version "11.x-dev"

      - name: Set PHPUnit
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer require phpunit/phpunit:^${{ matrix.phpunit }} --dev --no-interaction --no-update
          shell: bash

      - name: Install dependencies
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 5
          command: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          AWS_ACCESS_KEY_ID: random_key
          AWS_SECRET_ACCESS_KEY: random_secret

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-logs-${{ matrix.php }}-${{ matrix.phpunit }}-${{ matrix.stability }}
          path: |
            vendor/orchestra/testbench-core/laravel/storage/logs
            !vendor/**/.gitignore
